swagger: '2.0'

info:
  title: Plan B Revocation API
  description: API for managing OAuth 2 token revocations
  version: "1.0"

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: none
    scopes:
      uid: user identitiy

security:
  - oauth2:
    - uid

paths:
  /revocations:
    get:
      summary: Returns all the revocations since the specified timestamp.
      description: |
        Returns all revoked tokens from a specified timestamp. Also returns meta information which may be of importance to the client, like a refresh notification.
      tags:
        - Revocation
      parameters:
        - name: from
          description: instant from when tokens were revoked, in UTC UNIX timestamp
          in: query
          type: integer
          required: true
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/RevocationList'
        400:
          description: Type mismatch. When the parameter 'from' is missing or not an integer
          schema:
            $ref: '#/definitions/Problem'
    post:
      summary: Posts the specified revocation to be stored.
      description: |
        Revokes tokens associated with the specified revocation type.
      tags:
        - Revocation
      parameters:
        - name: revocation
          description: |
            the revocation associated with the tokens to revoke
          in: body
          schema:
            $ref: '#/definitions/RevocationData'
      responses:
        # Response code
        201:
          description: Revocation was successfully stored
        400:
          description: body is not readable because it is not valid JSON, or have an invalid JSON structure
          schema:
            $ref: '#/definitions/Problem'
        500:
          description: an internal error occurred, such as a failure to contact the revocation store.
          schema:
            $ref: '#/definitions/Problem'

  /notifications/{type}:
    post:
      summary: Posts the specified notification to be stored.
      description: |
        Resource to post notification information, like a revocation refresh.
      tags:
        - Notification
      parameters:
        - name: type
          in: path
          description: |
            the type of notification
          required: true
          type: string
          enum: [ "REFRESH_FROM" ]
        - name: value
          in: query
          description: |
            the value of the notification to be stored
          required: true
          type: string
      responses:
        # Response code
        201:
          description: Notification was successfully stored
        400:
          description: type mismatch in parameter 'value'
          schema:
            $ref: '#/definitions/Problem'
        500:
          description: an internal error occurred, such as a failure to contact the revocation store.
          schema:
            $ref: '#/definitions/Problem'

definitions:
  RevocationList:
    type: object
    properties:
      meta:
        type: object
        properties:
          MAX_TIME_DELTA:
            type: integer
            description: Used to inform clients of the maximum time in seconds since when it is possible to get revocations.
          REFRESH_FROM:
            type: integer
            description: UNIX Timestamp (UTC) informing clients that a refresh of revocations needs to be done, starting from a specified instant.
          REFRESH_TIMESTAMP:
            type: integer
            description: UNIX Timestamp (UTC) informing clients when REFRESH_FROM was set.
      revocations:
        type: array
        items:
          $ref: '#/definitions/RevocationInfo'
  RevocationInfo:
    type: object
    properties:
      type:
        type: string
        enum: [ "TOKEN", "CLAIM", "GLOBAL" ]
      revoked_at:
        type: integer
      data:
        description: |
        type: object
        format: '#/definitions/RevokedInfo'
  RevokedInfo:
    type: object
  RevokedClaimsInfo:
    allOf:
    - $ref: '#/definitions/RevokedInfo'
    - type: object
      properties:
        names:
          type: array
          items:
            type: string
          description: Set of claim fields
        value_hash:
          type: string
          description: The revoked claim values, using separator as a delimiter. Hashed using hash_algorithm, in URL Base64 encoding
        separator:
          type: string
          description: Character used to delimit claim values in the value_hash field
        hash_algorithm:
          type: string
          description: The algorithm used for hashing the Claim
        issued_before:
          type: integer
          description: a UNIX Timestamp (UTC) indicating that tokens issued before it are revoked. If this property is not set when posting a Claim Revocation, it will default to the current UNIX timestamp (UTC).
  RevokedGlobalInfo:
    allOf:
    - $ref: '#/definitions/RevokedInfo'
    - type: object
      properties:
        issued_before:
          type: integer
          description: a UNIX Timestamp (UTC) indication that tokens issued before it are revoked.
  RevokedTokenInfo:
    allOf:
    - $ref: '#/definitions/RevokedInfo'
    - type: object
      properties:
        token_hash:
          type: string
          description: The revoked token hashed using hash_algorithm, in URL Base64 encoding
        hash_algorithm:
          type: string
          description: The algorithm used for hashing the Token

  RevocationData:
    type: object
    properties:
      type:
        type: string
        enum: [ "TOKEN", "CLAIM", "GLOBAL" ]
      revoked_at:
        type: integer
      data:
        description: |
        type: object
        format: '#/definitions/RevokedData'
  RevocationRequest:
    type: object
    properties:
      type:
        type: string
        enum: [ "TOKEN", "CLAIM", "GLOBAL" ]
      data:
        description: |
        type: object
        format: '#/definitions/RevokedData'
  RevokedData:
    type: object
  RevokedClaimsData:
    allOf:
    - $ref: '#/definitions/RevokedData'
    - type: object
      properties:
        claims:
          type: object
          properties:
            claimValues:
              type: string
            additionalProperties:
            - $ref: '#/definitions/ClaimTuple'
          description: The claim of the tokens to revoke
        issued_before:
          type: integer
          description: a UNIX Timestamp (UTC) indicating that tokens issued before this value are revoked. If this value is not set when posting a Claim Revocation, it will default to the current UNIX timestamp (UTC).
  ClaimTuple:
    properties:
      name:
        type: string
      value:
        type: string
    description: A value pair relating claim names with their corresponding values. Used in RevokedClaimsData.

  RevokedGlobalData:
    allOf:
    - $ref: '#/definitions/RevokedData'
    - type: object
      properties:
        issued_before:
          type: integer
          description: a UNIX Timestamp (UTC) indicating that tokens issued before this value are revoked. If this value is not set when posting a Claim Revocation, it will default to the current UNIX timestamp (UTC).
  RevokedTokenData:
    allOf:
    - $ref: '#/definitions/RevokedData'
    - type: object
      properties:
        token:
          type: string
          description: The revoked token

  Problem:
    type: object
    description: |
      Represents a problem as specified by the IETF Problem Details draft (03). Used to complement HTTP Status codes with additional contextual information.
    properties:
      type:
        type: string
        description: |
          URI set to "about:blank"
      title:
        type: string
        description: |
          reason for the specified status
      status:
        type: string
        description: |
          HTTP status code
      detail:
        type: string
        description: |
          additional detail of the problem