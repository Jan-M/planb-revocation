swagger: '2.0'

info:
  title: Plan B Revocation API
  description: API for managing OAuth 2 token revocations
  version: "1.0"

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: none
    scopes:
      uid: user identitiy

security:
  - oauth2:
    - uid

paths:
  /revocations:
    get:
      summary: Returns all the revocations since the specified timestamp.
      description: |
        Returns all revoked tokens from a specified timestamp. Also returns meta information which may be of importance to the client, like a refresh notification.
      tags:
        - Revocation
      parameters:
        - name: from
          description: instant from when tokens were revoked, in UTC UNIX timestamp
          in: query
          type: integer
          required: true
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Revocations'
        400:
          description: Type mismatch. When the parameter 'from' is not present or not an integer
          schema:
            $ref: '#/definitions/Problem'
    post:
      summary: Posts the specified revocation to be stored.
      description: |
        Revokes tokens associated with the specified revocation type.
      tags:
        - Revocation
      parameters:
        - name: revocation
          description: |
            the revocation associated with the tokens to revoke
          in: body
          schema:
            $ref: '#/definitions/Revocation'
      responses:
        # Response code
        201:
          description: Revocation was successfully stored

definitions:
  Revocations:
    type: object
    properties:
      meta:
        type: object
        properties:
          force_refresh_from:
            type: string
            format: date-time
            description: Informs the caller to get the tokens that were revoked revoked from the specified timestamp
      revocations:
        type: array
        items:
          $ref: '#/definitions/Revocation'
  Revocation:
    type: object
    properties:
      type:
        type: string
        enum: [ "TOKEN", "CLAIM", "GLOBAL" ]
      revoked_at:
        type: string
        format: date-time
      data:
        type: object
        format: '#/definitions/Data'

  Data:
    type: object
  Claim:
    allOf:
    - $ref: '#/definitions/Data'
    - type: object
      properties:
        name:
          type: string
          description: The claim of the tokens to revoke
        value_hash:
          type: string
          description: The revoked claim hashed using hash_algorithm, encoded in Base64 Basic
        hash_algorithm:
          type: string
          description: The algorithm used for hashing the Claim
        issued_before:
          type: string
          format: date-time
          description: Upper time bound for tokens
  Global:
    allOf:
    - $ref: '#/definitions/Data'
    - type: object
      properties:
        issued_before:
          type: string
          format: date-time
          description: Upper time bound for tokens
  Token:
    allOf:
    - $ref: '#/definitions/Data'
    - type: object
      properties:
        token_hash:
          type: string
          description: The revoked token hashed - using hash_algorithm -, encoded in URL Base64
        hash_algorithm:
          type: string
          description: The algorithm used for hashing the Token
  Problem:
    type: object
    description: |
      Represents a problem as specified by the IETF Problem Details draft (03). Used to complement HTTP Status codes with additional contextual information.
    properties:
      type:
        type: string
        description: |
          URI set to "about:blank"
      title:
        type: string
        description: |
          reason for the specified status
      status:
        type: string
        description: |
          HTTP status code
      detail:
        type: string
        description: |
          additional detail of the problem
